#!/usr/bin/env perl

# Copyright Â© 2007 Pippijn van Steenhoven

use common::sense;
use lib "eval/bin";

use Evaluator {
   username => "nobody",
   chroot   => "eval/rt" . $Evaluator::BITS,
};

use Time::HiRes 'gettimeofday';
use Fcntl ':seek';
use Storable 'store_fd', 'retrieve';
use AnyEvent::HTTPD;
use JSON::XS;
use IO::Handle;

my $aldor;
sub evaluator {
   if (not $aldor) {
      Evaluator::setup;
      $ENV{ALDOR_TERM} = "html";
      $ENV{ALDOR_TERMINFO} = "include/sample.terminfo";
      $aldor = new Evaluator;
   }

   $aldor
}
 

###################################################
# :: Logging code
###################################################

# read log
my $log = -f "evaluator.pst" ? retrieve 'evaluator.pst' : {};
# open log file
open my $pst, '>', 'evaluator.pst' or die "evaluator.pst: $!";
# write back the log
store_fd $log, $pst;
$pst->flush;

sub log_entry {
   my ($proc, $host, $code, $line) = @_;

   # Write log entry.
   $log->{$code}->{$line} = [time, $proc, $host];

   # reset file to 0 bytes
   truncate $pst, 0;
   seek $pst, 0, SEEK_SET;

   # store new log to disk
   store_fd $log, $pst;
   $pst->flush;
}


###################################################
# :: HTTP responder
###################################################

my $httpd = AnyEvent::HTTPD->new (port => 9090);

$httpd->reg_cb (
   '/' => sub {
      my ($httpd, $req) = @_;

      my $aldor = evaluator;

      my $code = $req->parm ("code");
      my $line = $req->parm ("line");

      my $repl = <<EOF;
#include "tryaldor"
$line
#quit
EOF

      my $start = gettimeofday;

      # Run the code.
      my $result = $aldor->eval ($code, $repl);
      $result =~ s/Aldor\n\nCopyright.*\n\n//;

      # Check how long it took.
      my $proc = gettimeofday - $start;

      log_entry $proc, $req->client_host, $code, $line;

      printf "[%s] Request from %s:%d took %.4fs\n",
         (scalar localtime time),
         $req->client_host,
         $req->client_port,
         $proc;

      $req->respond ([
         200, 'OK', {
            'Content-Type' => 'text/plain',
            'Access-Control-Allow-Origin' => $req->headers->{origin},
         }, $result
      ]);
   }
);

$httpd->run
