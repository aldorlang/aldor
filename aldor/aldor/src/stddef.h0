/*****************************************************************************
 *
 * stddef.h0: Fixups for <stddef.h>.
 *
 * Copyright (c) 1990-2007 Aldor Software Organization Ltd (Aldor.org).
 *
 ****************************************************************************/

/*
 * The ANSI C file <stddef.h> provides types size_t, ptrdiff_t, wchar_t
 * and the macros NULL and offsetof.
 *
 * The standard requires that this header may be included together
 * with any other ANSI header.  This file provides patches to satisfy this.
 */

#ifndef _STDDEF_H0_
#define _STDDEF_H0_

#ifdef CC_no_stddef_h

#  ifndef _SIZE_T
#    define _SIZE_T
     typedef unsigned long	size_t;		/* Might be unsigned int. */
#  endif

#  ifndef _PTRDIFF_T
#    define _PTRDIFF_T
     typedef long		ptrdiff_t;	/* Might be int. */
#  endif

#  ifndef _WCHAR_T
#    define _WCHAR_T
     typedef unsigned short	wchar_t;	/* Might be any int type. */
#  endif

#  ifndef NULL
#    ifndef CC_no_void_pointer
#      define NULL	((void *) 0)
#    else
#      define NULL	((char *) 0)
#    endif
#  endif

#  ifndef offsetof
#    define offsetof(Struct, Field) ((size_t) & ((Type *) 0)->Field)
#  endif

#else

   /*
    * Some platforms have include files which attempt to re-typedef.
    * The following fixup allows these files to be included without breaking.
    */

#  ifdef CC_sys_types_conflict
#    define size_t	_stddef1_typedefed_size_t
#    define ptrdiff_t	_stddef1_typedefed_ptrdiff_t
#    define wchar_t	_stddef1_typedefed_wchar_t
#    include <sys/types.h>
#    undef size_t
#    undef ptrdiff_t
#    undef wchar_t
#  endif

#  ifdef CC_sys_stdtypes_conflict
#    define size_t	_stddef2_typedefed_size_t
#    define ptrdiff_t	_stddef2_typedefed_ptrdiff_t
#    define wchar_t	_stddef2_typedefed_wchar_t
#    define time_t	_stddef2_typedefed_time_t
#    include <sys/stdtypes.h>
#    undef size_t
#    undef ptrdiff_t
#    undef wchar_t
#    undef time_t
#  endif

#  include <stddef.h>

#endif	/* !CC_no_stddef_h */

/*
 * These macros are used in other .h0 files.
 * Use them so we give the prototypes only once, rather than
 * worrying about all combinations.
 */

#  ifdef CC_no_const
#    define _const
#  else
#    define _const	const
#  endif

#  ifdef CC_no_void_pointer
#    define _void	char
#  else
#    define _void	void
#  endif

#endif  /* !_STDDEF_H0_ */
