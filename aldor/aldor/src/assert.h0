/*****************************************************************************
 *
 * assert.h0:  Fixups for <assert.h>
 *
 * Copyright (c) 1990-2007 Aldor Software Organization Ltd (Aldor.org).
 *
 ****************************************************************************/

/*
 * The ANSI C file <assert.h> must be able to be included any number
 * of times and behave according to the current value of NDEBUG.
 *
 * This file is so easy to implement and so many vendors get it wrong,
 * that we just do it ourselves.
 */

#include "features.h0"

#ifndef DO_ASSERT_IS_DECLARED
#define DO_ASSERT_IS_DECLARED
void _abort_if_fatal_assert(void) chk_noreturn;
void _do_assert(char *str, char *file, int line) chk_noreturn;
#endif

#if defined(QASSERT)
#  define _a_msg(x)	((char *) 0)
#else
#  define _a_msg(x)	(x)
#endif

extern int	_dont_assert;
extern int	_fatal_assert;

#if defined(NDEBUG)
#  define assert(c)
#else

#  define assert(c)					\
     do {						\
       if (!(c))					\
         _do_assert(_a_msg(#c),__FILE__,__LINE__);	\
     } while (0)
#endif
