# ..From autoconf
@SET_MAKE@

VPATH = @srcdir@
abs_top_builddir = @abs_top_builddir@
srcdir = @srcdir@
top_builddir = @top_builddir@
builddir = @builddir@
abs_top_srcdir = @abs_top_srcdir@
top_srcdir = @top_srcdir@
subdir = lib/libax0/src/al
axlincdir = $(abs_top_srcdir)/lib/axllib/include
axllibdir = $(abs_top_srcdir)/lib/axllib/src/al

UNIQ = perl $(top_srcdir)/aldor/tools/unix/uniq

# Check the makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ '; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ ;; \
	esac;


# Build starts here
aldorsrcdir = $(abs_top_srcdir)/aldor/src
aldorexedir = $(abs_top_builddir)/aldor/src
libname = ax0

axllib_library = lang

ax_library = basecliq equation1 aggcat stream seg list array1 array2	\
	     sex any  mkfunc  indexedp  misc op pattern kl variable 	\
	     patmatch1 sf si float symbol integer vector matcat matrix  \
	     polycat multpoly fspace poly equation2 fr fraction patmatch2
library  = attrib stub axlit minimach axextend

all_library = $(library) $(axllib_library) $(ax_library)
attrib_deps := lang
stub_deps   := lang
axlit_deps  := lang stub attrib basecliq symbol integer
minimach_deps := lang

basecliq_deps := lang stub attrib
equation1_deps := basecliq
aggcat_deps := equation1
sex_deps := aggcat
any_deps := sex
list_deps := aggcat
op_deps := basecliq any list
pattern_deps := any op
kl_deps := aggcat pattern
patmatch1_deps := kl
symbol_deps := patmatch1 kl
stream_deps := aggcat
seg_deps := stream
sf_deps := patmatch1
si_deps := sf
integer_deps := si
vector_deps := sf

array1_deps := aggcat
array2_deps := array1
mkfunc_deps := any
indexedp_deps := basecliq
misc_deps := basecliq
variable_deps := pattern
float_deps := sf
matcat_deps := array2 vector
matrix_deps := matcat
polycat_deps := patmatch1 misc integer
multpoly_deps := polycat indexedp symbol variable
fspace_deps := kl multpoly
poly_deps := polycat variable indexedp
equation2_deps := aggcat fspace
fr_deps := aggcat si equation2
fraction_deps := fr
patmatch2_deps := patmatch1 fraction

axextend_deps := lang stub basecliq minimach symbol seg integer vector \
		 axlit

aldorexedir=$(abs_top_builddir)/aldor/src

aldoropt := -Q8 -Qinline-all
define aldor_args
	-I$(axlincdir) \
	-I$(srcdir)/.. $(aldoropt) $(aldordebug_$*) \
	-Nfile=$(aldorsrcdir)/aldor.conf 	\
	-lAxiomLib=$(libname)_$* 		\
	-Fao=$*.ao 
endef

$(patsubst %, %.ao, $(axllib_library)):aldorsrc=$(axllibdir)/%.as
$(patsubst %, %.ao, $(ax_library)): aldorsrc=../ax/%.ax
$(patsubst %, %.ao, $(library)): aldorsrc=../%.as

$(patsubst %, %.ao, $(axllib_library)): %.ao: $(axllibdir)/%.as
$(patsubst %, %.ao, $(ax_library)): %.ao: $(srcdir)/../ax/%.ax
$(patsubst %, %.ao, $(library)): %.ao: $(srcdir)/../%.as

$(patsubst %, %.ao, $(all_library)): $(aldorexedir)/aldor
$(patsubst %, %.ao, $(all_library)): %.ao: 
	@echo AO $*
	@rm -f lib$(libname)_$*.al
	@rm -f $*.ao
	@ar cr lib$(libname)_$*.al $(addsuffix .ao, $(shell $(UNIQ) $*.dep))
	@$(aldorexedir)/aldor $(aldor_args) $(filter %.ax %.as %.ap,$^)
	@rm lib$(libname)_$*.al

$(patsubst %, %.cmd, $(all_library)): %.cmd: Makefile
	@echo "run $(aldor_args)" > $@

define dep_template
$(1).ao: $(1).dep $$(patsubst %,%.ao,$$($(1)_deps))
$(1).dep: $$(patsubst %,%.dep,$$($(1)_deps))
endef

$(patsubst %,%.dep,$(all_library) lib$(libname)): Makefile.in
	@echo DEP $(patsubst %.dep,%,$@)
	@echo > $@.tmp
	@for i in $(filter %.dep, $^); \
	 do d=$$(basename $$i .dep); \
	   cat $$i >> $@.tmp; echo $(basename $$d .dep)>> $@.tmp;  \
	 done
	@if test ! -f $@; then touch $@; fi
	@if diff $@ $@.tmp > /dev/null; then rm $@.tmp; else mv $@.tmp $@; fi


$(foreach l,$(all_library), $(eval $(call dep_template,$(l))))

$(patsubst %,%.fm,$(library)): %.fm: %.ao 
	@echo AO_TO_FM $*
	@$(aldorexedir)/aldor \
		     -Nfile=$(aldorsrcdir)/aldor.conf 	\
		     -Ffm=$@ $*.ao

all: Makefile \
	lib$(libname).al 			
#	$(patsubst %, %.fm, $(all_library))		

lib$(libname).dep: $(patsubst %,%.dep,$(all_library))
lib$(libname).al: $(patsubst %,%.dep, $(all_library))
lib$(libname).al: $(patsubst %,%.ao, $(all_library))
lib$(libname).al: lib$(libname).dep
	@echo LIB $(patsubst %.al, %, $@)
	@rm -f $@
	@ar cr $@ $(addsuffix .ao, $(shell $(UNIQ) $(@:.al=.dep)))

# 
# :: Automake requires this little lot
#
mostlyclean: 
	rm -f $(patsubst %, %.ao, $(all_library))
	rm -f $(patsubst %, %.dep, $(all_library))
	rm -f $(patsubst %, %.dep.tmp, $(all_library))
	rm -f $(patsubst %, lib$(libname)_%.al, $(all_library))
	rm -f $(patsubst %, %.fm, $(all_library))

clean: mostlyclean
distclean: clean 
	rm Makefile
maintainer-clean: distclean


EMPTY_AUTOMAKE_TARGETS  = dvi pdf ps info html tags ctags
EMPTY_AUTOMAKE_TARGETS += install install-data install-exec uninstall
EMPTY_AUTOMAKE_TARGETS += install-dvi install-html install-info install-ps install-pdf
EMPTY_AUTOMAKE_TARGETS += installdirs
EMPTY_AUTOMAKE_TARGETS += check installcheck

.PHONY: $(EMPTY_AUTOMAKE_TARGETS)
$(EMPTY_AUTOMAKE_TARGETS):
